@model SIDS.Plugin.Misc.BetterBreadCrumb.Models.ConfigurationModel
@{
	Layout = "_ConfigurePlugin";
}
@await Component.InvokeAsync("StoreScopeConfiguration")
<form asp-controller="BetterBreadCrumb" asp-action="Configure" method="post">
No configuration is needed in this version - This is SIDS.BetterBreadCrumb
<div class="form-group row">
    <div class="col-md-3">
        <nop-label asp-for="Enabled" />
    </div>
    <div class="col-md-3">
        <nop-editor asp-for="Enabled" />
        <span asp-validation-for="Enabled"></span>
    </div>
</div>
<div class="form-group row">
    <div class="col-md-3">
        &nbsp;
    </div>
    <div class="col-md-9">
        <button type="submit" name="save" class="btn btn-primary">@T("Admin.Common.Save")</button>
    </div>
</div>
</form>
 
@*  The above code is the configuration view of the plugin. It is a simple form with a checkbox to enable or disable the plugin. 
 The  @await Component.InvokeAsync("StoreScopeConfiguration")  line is used to display the store scope configuration. 
 The  asp-for  attribute is used to bind the model properties to the form fields. 
 The  asp-validation-for  attribute is used to display the validation messages. 
 The  @T("Admin.Common.Save")  is used to display the localized text. 
 The  nop-label  and  nop-editor  are the custom tag helpers provided by nopCommerce. 
 The  nop-label  tag helper is used to display the label for *@